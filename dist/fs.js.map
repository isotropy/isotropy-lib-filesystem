{"version":3,"sources":["../src/fs.js"],"names":["dirPath","entries","fs","readdir","stats","Promise","all","map","lstat","path","join","filename","then","isDirectory","stat","filter","item","getFilesInPath","pathArray","out","files","push","length","getFilesInPathRecursively","pop","readFile","contents","pathExists","exists","outputFile","createFile","unlink","deleteFile","updateFile","newPath","move","moveFile","newDirPath","moveDir","getFiles","require","recurse","getNestedFilesInPath"],"mappings":"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","file":"fs.js","sourcesContent":["const fs = require(\"fs-extra\");\nconst path = require(\"path\");\n\nasync function getFilesInPath(dirPath) {\n  const entries = await fs.readdir(dirPath);\n  const stats = await Promise.all(\n    entries.map(filename =>\n      fs.lstat(path.join(dirPath, filename)).then(stat => ({\n        filename,\n        isDirectory: stat.isDirectory()\n      }))\n    )\n  );\n  return stats\n    .filter(item => !item.isDirectory)\n    .map(item => path.join(dirPath, item.filename));\n}\n\nasync function getFilesInPathRecursively(dirPath, pathArray = [], out = []) {\n  const entries = await fs.readdir(dirPath);\n  const stats = await Promise.all(\n    entries.map(filename =>\n      fs.lstat(path.join(dirPath, filename)).then(stat => ({\n        filename,\n        isDirectory: stat.isDirectory()\n      }))\n    )\n  );\n  const files = stats\n    .filter(item => {\n      if (item.isDirectory) pathArray.push(path.join(dirPath, item.filename));\n      return !item.isDirectory;\n    })\n    .map(item => path.join(dirPath, item.filename));\n\n  out.push(...files);\n  if (pathArray.length < 1) return out;\n  return getFilesInPathRecursively(pathArray.pop(), pathArray, out);\n}\n\nexport function getFiles(dirPath, recurse = false) {\n  if (recurse === false) return getFilesInPath(dirPath);\n  return getNestedFilesInPath(dirPath);\n}\n\nexport async function readFile(path) {\n  return await fs.readFile(path, \"utf8\").then(contents => ({ contents }));\n}\n\nexport async function createFile(path, contents = \"\") {\n  return await fs\n    .pathExists(path)\n    .then(exists => (exists ? null : fs.outputFile(path, contents)));\n}\n\nexport async function deleteFile(path) {\n  return await fs.unlink(path);\n}\n\nexport async function updateFile(path, contents) {\n  return await fs.outputFile(path, contents);\n}\n\nexport async function moveFile(path, newPath) {\n  return await fs.move(path, newPath);\n}\n\nexport async function moveDir(dirPath, newDirPath) {\n  return await moveFile(dirPath, newDirPath);\n}\n"]}