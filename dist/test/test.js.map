{"version":3,"sources":["../../src/test/test.js"],"names":["fsLib","should","require","fs","describe","beforeEach","removeSync","__dirname","mkdirsSync","it","createFile","result","readFile","contents","equal","updateFile","moveFile","newPathExists","pathExists","oldPathExists","moveDir","deleteFile"],"mappings":"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","file":"test.js","sourcesContent":["const should = require(\"should\");\nconst fs = require(\"fs-extra\");\nimport * as fsLib from \"../fs\";\n\ndescribe(\"lib-fs\", function() {\n  beforeEach(() => {\n    fs.removeSync(`${__dirname}/test-box`);\n    fs.mkdirsSync(`${__dirname}/test-box`);\n    fs.removeSync(`${__dirname}/box-test`);\n    fs.mkdirsSync(`${__dirname}/box-test`);\n  });\n\n  it(\"createFile\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Should it be mocha or chai\"\n    );\n    const result = await fsLib.readFile(`${__dirname}/test-box/text.txt`);\n    result.contents.should.equal(\"Should it be mocha or chai\");\n  });\n\n  it(\"readFile\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Should it be mocha or chai\"\n    );\n    const result = await fsLib.readFile(`${__dirname}/test-box/text.txt`);\n    result.contents.should.equal(\"Should it be mocha or chai\");\n  });\n\n  it(\"updateFile\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Should it be mocha or chai\"\n    );\n    await fsLib.updateFile(\n      `${__dirname}/test-box/text.txt`,\n      \"It should be mocha I guess\"\n    );\n    const result = await fsLib.readFile(`${__dirname}/test-box/text.txt`);\n    result.contents.should.equal(\"It should be mocha I guess\");\n  });\n\n  it(\"moveFile\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Moving dem files\"\n    );\n    await fsLib.moveFile(\n      `${__dirname}/test-box/text.txt`,\n      `${__dirname}/box-test/text.txt`\n    );\n    const newPathExists = await fs.pathExists(`${__dirname}/box-test/text.txt`);\n    const oldPathExists = await fs.pathExists(`${__dirname}/test-box/text.txt`);\n    newPathExists.should.equal(true) && oldPathExists.should.equal(false);\n  });\n\n  it(\"moveDir\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Moving dem files\"\n    );\n    await fsLib.moveDir(\n      `${__dirname}/test-box/text.txt`,\n      `${__dirname}/box-test/test-box/text.txt`\n    );\n    const newPathExists = await fs.pathExists(\n      `${__dirname}/box-test/test-box/text.txt`\n    );\n    const oldPathExists = await fs.pathExists(`${__dirname}/test-box/text.txt`);\n    newPathExists.should.equal(true) && oldPathExists.should.equal(false);\n  });\n\n  it(\"deleteFile\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Should it be mocha or chai\"\n    );\n    await fsLib.deleteFile(`${__dirname}/test-box/text.txt`);\n    const pathExists = await fs.pathExists(`${__dirname}/test-box/text.txt`);\n    pathExists.should.equal(false);\n  });\n});\n"]}