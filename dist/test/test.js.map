{"version":3,"sources":["../../src/test/test.js"],"names":["fsLib","should","require","fs","describe","beforeEach","removeSync","__dirname","mkdirsSync","it","createFile","result","readFile","contents","equal","getFiles","deepEqual","moveFile","newPathExists","pathExists","oldPathExists","updateFile","deleteFile","moveDir"],"mappings":";;AAEA;;IAAYA,K;;;;;;AAFZ,MAAMC,SAASC,QAAQ,QAAR,CAAf;AACA,MAAMC,KAAKD,QAAQ,UAAR,CAAX;;;AAGAE,SAAS,QAAT,EAAmB,YAAW;AAC5BC,aAAW,YAAM;AACfF,OAAGG,UAAH,CAAe,GAAEC,SAAU,WAA3B;AACAJ,OAAGK,UAAH,CAAe,GAAED,SAAU,WAA3B;AACAJ,OAAGG,UAAH,CAAe,GAAEC,SAAU,WAA3B;AACAJ,OAAGK,UAAH,CAAe,GAAED,SAAU,WAA3B;AACD,GALD;;AAOAE,KAAG,YAAH,oBAAiB,aAAY;AAC3B,UAAMT,MAAMU,UAAN,CACH,GAAEH,SAAU,oBADT,EAEJ,4BAFI,CAAN;AAIA,UAAMI,SAAS,MAAMX,MAAMY,QAAN,CAAgB,GAAEL,SAAU,oBAA5B,CAArB;AACAI,WAAOE,QAAP,CAAgBZ,MAAhB,CAAuBa,KAAvB,CAA6B,4BAA7B;AACD,GAPD;;AASAL,KAAG,UAAH,oBAAe,aAAY;AACzB,UAAMT,MAAMU,UAAN,CACH,GAAEH,SAAU,oBADT,EAEJ,4BAFI,CAAN;AAIA,UAAMP,MAAMU,UAAN,CACH,GAAEH,SAAU,sBADT,EAEJ,4BAFI,CAAN;AAIA,UAAMP,MAAMU,UAAN,CAAkB,GAAEH,SAAU,qBAA9B,EAAoD,eAApD,CAAN;AACA,UAAMI,SAAS,MAAMX,MAAMe,QAAN,CAAgB,GAAER,SAAU,YAA5B,CAArB;AACAI,WAAOV,MAAP,CAAce,SAAd,CAAwB,CACrB,GAAET,SAAU,sBADS,EAErB,GAAEA,SAAU,qBAFS,EAGrB,GAAEA,SAAU,oBAHS,CAAxB;AAKD,GAhBD;;AAkBAE,KAAG,mBAAH,oBAAwB,aAAY;AAClC,UAAMT,MAAMU,UAAN,CACH,GAAEH,SAAU,oBADT,EAEJ,4BAFI,CAAN;AAIA,UAAMP,MAAMU,UAAN,CACH,GAAEH,SAAU,sBADT,EAEJ,4BAFI,CAAN;AAIA,UAAMP,MAAMU,UAAN,CACH,GAAEH,SAAU,6BADT,EAEJ,eAFI,CAAN;AAIA,UAAMP,MAAMU,UAAN,CACH,GAAEH,SAAU,+BADT,EAEJ,UAFI,CAAN;AAIA,UAAMP,MAAMU,UAAN,CACH,GAAEH,SAAU,wCADT,EAEJ,SAFI,CAAN;AAIA,UAAMI,SAAS,MAAMX,MAAMe,QAAN,CAAgB,GAAER,SAAU,YAA5B,EAAyC,IAAzC,CAArB;AACAI,WAAOV,MAAP,CAAce,SAAd,CAAwB,CACrB,GAAET,SAAU,sBADS,EAErB,GAAEA,SAAU,oBAFS,EAGrB,GAAEA,SAAU,+BAHS,EAIrB,GAAEA,SAAU,6BAJS,EAKrB,GAAEA,SAAU,wCALS,CAAxB;AAOD,GA7BD;;AA+BAE,KAAG,UAAH,oBAAe,aAAY;AACzB,UAAMT,MAAMU,UAAN,CACH,GAAEH,SAAU,oBADT,EAEJ,4BAFI,CAAN;AAIA,UAAMI,SAAS,MAAMX,MAAMY,QAAN,CAAgB,GAAEL,SAAU,oBAA5B,CAArB;AACAI,WAAOE,QAAP,CAAgBZ,MAAhB,CAAuBa,KAAvB,CAA6B,4BAA7B;AACD,GAPD;;AASAL,KAAG,UAAH,oBAAe,aAAY;AACzB,UAAMT,MAAMU,UAAN,CACH,GAAEH,SAAU,oBADT,EAEJ,kBAFI,CAAN;AAIA,UAAMP,MAAMiB,QAAN,CACH,GAAEV,SAAU,oBADT,EAEH,GAAEA,SAAU,oBAFT,CAAN;AAIA,UAAMW,gBAAgB,MAAMf,GAAGgB,UAAH,CAAe,GAAEZ,SAAU,oBAA3B,CAA5B;AACA,UAAMa,gBAAgB,MAAMjB,GAAGgB,UAAH,CAAe,GAAEZ,SAAU,oBAA3B,CAA5B;AACAW,kBAAcjB,MAAd,CAAqBa,KAArB,CAA2B,IAA3B,KAAoCM,cAAcnB,MAAd,CAAqBa,KAArB,CAA2B,KAA3B,CAApC;AACD,GAZD;;AAcAL,KAAG,YAAH,oBAAiB,aAAY;AAC3B,UAAMT,MAAMU,UAAN,CACH,GAAEH,SAAU,oBADT,EAEJ,4BAFI,CAAN;AAIA,UAAMP,MAAMqB,UAAN,CACH,GAAEd,SAAU,oBADT,EAEJ,4BAFI,CAAN;AAIA,UAAMI,SAAS,MAAMX,MAAMY,QAAN,CAAgB,GAAEL,SAAU,oBAA5B,CAArB;AACAI,WAAOE,QAAP,CAAgBZ,MAAhB,CAAuBa,KAAvB,CAA6B,4BAA7B;AACD,GAXD;;AAaAL,KAAG,YAAH,oBAAiB,aAAY;AAC3B,UAAMT,MAAMU,UAAN,CACH,GAAEH,SAAU,oBADT,EAEJ,4BAFI,CAAN;AAIA,UAAMP,MAAMsB,UAAN,CAAkB,GAAEf,SAAU,oBAA9B,CAAN;AACA,UAAMY,aAAa,MAAMhB,GAAGgB,UAAH,CAAe,GAAEZ,SAAU,oBAA3B,CAAzB;AACAY,eAAWlB,MAAX,CAAkBa,KAAlB,CAAwB,KAAxB;AACD,GARD;AASD,CA/GD;;AAiHAL,GAAG,SAAH,oBAAc,aAAY;AACxB,QAAMT,MAAMU,UAAN,CAAkB,GAAEH,SAAU,oBAA9B,EAAmD,kBAAnD,CAAN;AACA,QAAMP,MAAMuB,OAAN,CACH,GAAEhB,SAAU,oBADT,EAEH,GAAEA,SAAU,6BAFT,CAAN;AAIA,QAAMW,gBAAgB,MAAMf,GAAGgB,UAAH,CACzB,GAAEZ,SAAU,6BADa,CAA5B;AAGA,QAAMa,gBAAgB,MAAMjB,GAAGgB,UAAH,CAAe,GAAEZ,SAAU,oBAA3B,CAA5B;AACAW,gBAAcjB,MAAd,CAAqBa,KAArB,CAA2B,IAA3B,KAAoCM,cAAcnB,MAAd,CAAqBa,KAArB,CAA2B,KAA3B,CAApC;AACD,CAXD","file":"test.js","sourcesContent":["const should = require(\"should\");\nconst fs = require(\"fs-extra\");\nimport * as fsLib from \"../fs\";\n\ndescribe(\"lib-fs\", function() {\n  beforeEach(() => {\n    fs.removeSync(`${__dirname}/test-box`);\n    fs.mkdirsSync(`${__dirname}/test-box`);\n    fs.removeSync(`${__dirname}/box-test`);\n    fs.mkdirsSync(`${__dirname}/box-test`);\n  });\n\n  it(\"createFile\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Should it be mocha or chai\"\n    );\n    const result = await fsLib.readFile(`${__dirname}/test-box/text.txt`);\n    result.contents.should.equal(\"Should it be mocha or chai\");\n  });\n\n  it(\"getFiles\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Should it be mocha or chai\"\n    );\n    await fsLib.createFile(\n      `${__dirname}/test-box/teckst.txt`,\n      \"It should be mocha I guess\"\n    );\n    await fsLib.createFile(`${__dirname}/test-box/tekst.txt`, \"Or maybe chai\");\n    const result = await fsLib.getFiles(`${__dirname}/test-box/`);\n    result.should.deepEqual([\n      `${__dirname}/test-box/teckst.txt`,\n      `${__dirname}/test-box/tekst.txt`,\n      `${__dirname}/test-box/text.txt`\n    ]);\n  });\n\n  it(\"getFilesRecursive\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Should it be mocha or chai\"\n    );\n    await fsLib.createFile(\n      `${__dirname}/test-box/teckst.txt`,\n      \"It should be mocha I guess\"\n    );\n    await fsLib.createFile(\n      `${__dirname}/test-box/box-test/text.txt`,\n      \"Or maybe chai\"\n    );\n    await fsLib.createFile(\n      `${__dirname}/test-box/box-test/teckst.txt`,\n      \"Or mocha\"\n    );\n    await fsLib.createFile(\n      `${__dirname}/test-box/box-test/bento-test/text.txt`,\n      \"Or chai\"\n    );\n    const result = await fsLib.getFiles(`${__dirname}/test-box/`, true);\n    result.should.deepEqual([\n      `${__dirname}/test-box/teckst.txt`,\n      `${__dirname}/test-box/text.txt`,\n      `${__dirname}/test-box/box-test/teckst.txt`,\n      `${__dirname}/test-box/box-test/text.txt`,\n      `${__dirname}/test-box/box-test/bento-test/text.txt`\n    ]);\n  });\n\n  it(\"readFile\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Should it be mocha or chai\"\n    );\n    const result = await fsLib.readFile(`${__dirname}/test-box/text.txt`);\n    result.contents.should.equal(\"Should it be mocha or chai\");\n  });\n\n  it(\"moveFile\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Moving dem files\"\n    );\n    await fsLib.moveFile(\n      `${__dirname}/test-box/text.txt`,\n      `${__dirname}/box-test/text.txt`\n    );\n    const newPathExists = await fs.pathExists(`${__dirname}/box-test/text.txt`);\n    const oldPathExists = await fs.pathExists(`${__dirname}/test-box/text.txt`);\n    newPathExists.should.equal(true) && oldPathExists.should.equal(false);\n  });\n\n  it(\"updateFile\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Should it be mocha or chai\"\n    );\n    await fsLib.updateFile(\n      `${__dirname}/test-box/text.txt`,\n      \"It should be mocha I guess\"\n    );\n    const result = await fsLib.readFile(`${__dirname}/test-box/text.txt`);\n    result.contents.should.equal(\"It should be mocha I guess\");\n  });\n\n  it(\"deleteFile\", async () => {\n    await fsLib.createFile(\n      `${__dirname}/test-box/text.txt`,\n      \"Should it be mocha or chai\"\n    );\n    await fsLib.deleteFile(`${__dirname}/test-box/text.txt`);\n    const pathExists = await fs.pathExists(`${__dirname}/test-box/text.txt`);\n    pathExists.should.equal(false);\n  });\n});\n\nit(\"moveDir\", async () => {\n  await fsLib.createFile(`${__dirname}/test-box/text.txt`, \"Moving dem files\");\n  await fsLib.moveDir(\n    `${__dirname}/test-box/text.txt`,\n    `${__dirname}/box-test/test-box/text.txt`\n  );\n  const newPathExists = await fs.pathExists(\n    `${__dirname}/box-test/test-box/text.txt`\n  );\n  const oldPathExists = await fs.pathExists(`${__dirname}/test-box/text.txt`);\n  newPathExists.should.equal(true) && oldPathExists.should.equal(false);\n});\n"]}